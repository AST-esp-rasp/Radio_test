(self["webpackChunkradio_player"]=self["webpackChunkradio_player"]||[]).push([[540],{14540:function(t,e,r){"use strict";r.r(e);var s=r(8718),a=r(18432),i={};for(var n in a)"default"!==n&&(i[n]=function(t){return a[t]}.bind(0,n));r.d(e,i);var o=r(1001),l=(0,o.Z)(a["default"],s.s,s.x,!1,null,null,null);e["default"]=l.exports},18432:function(t,e,r){"use strict";r.r(e);var s=r(56791),a=r.n(s),i={};for(var n in s)"default"!==n&&(i[n]=function(t){return s[t]}.bind(0,n));r.d(e,i),e["default"]=a()},1884:function(){},56791:function(){},79582:function(t,e,r){"use strict";r.d(e,{Z:function(){return o}});var s=r(83434),a=r(49603),i=r(58860),n=r(67678),o=(0,n.Z)(a.Z,i.Z,s.Z).extend({name:"v-card",props:{flat:Boolean,hover:Boolean,img:String,link:Boolean,loaderHeight:{type:[Number,String],default:4},raised:Boolean},computed:{classes(){return{"v-card":!0,...i.Z.options.computed.classes.call(this),"v-card--flat":this.flat,"v-card--hover":this.hover,"v-card--link":this.isClickable,"v-card--loading":this.loading,"v-card--disabled":this.disabled,"v-card--raised":this.raised,...s.Z.options.computed.classes.call(this)}},styles(){const t={...s.Z.options.computed.styles.call(this)};return this.img&&(t.background=`url("${this.img}") center center / cover no-repeat`),t}},methods:{genProgress(){const t=a.Z.options.methods.genProgress.call(this);return t?this.$createElement("div",{staticClass:"v-card__progress",key:"progress"},[t]):null}},render(t){const{tag:e,data:r}=this.generateRouteLink();return r.style=this.styles,this.isClickable&&(r.attrs=r.attrs||{},r.attrs.tabindex=0),t(e,this.setBackgroundColor(this.color,r),[this.genProgress(),this.$slots.default])}})},69256:function(t,e,r){"use strict";r(19027),r(1884);var s=r(27549),a=r(51767);e["Z"]=(0,s.Z)("container").extend({name:"v-container",functional:!0,props:{id:String,tag:{type:String,default:"div"},fluid:{type:Boolean,default:!1}},render(t,{props:e,data:r,children:s}){let i;const{attrs:n}=r;return n&&(r.attrs={},i=Object.keys(n).filter((t=>{if("slot"===t)return!1;const e=n[t];return t.startsWith("data-")?(r.attrs[t]=e,!1):e||"string"===typeof e}))),e.id&&(r.domProps=r.domProps||{},r.domProps.id=e.id),t(e.tag,(0,a.ZP)(r,{staticClass:"container",class:Array({"container--fluid":e.fluid}).concat(i||[])}),s)}})},27549:function(t,e,r){"use strict";r.d(e,{Z:function(){return a}});var s=r(20144);function a(t){return s.ZP.extend({name:`v-${t}`,functional:!0,props:{id:String,tag:{type:String,default:"div"}},render(e,{props:r,data:s,children:a}){s.staticClass=`${t} ${s.staticClass||""}`.trim();const{attrs:i}=s;if(i){s.attrs={};const t=Object.keys(i).filter((t=>{if("slot"===t)return!1;const e=i[t];return t.startsWith("data-")?(s.attrs[t]=e,!1):e||"string"===typeof e}));t.length&&(s.staticClass+=` ${t.join(" ")}`)}return r.id&&(s.domProps=s.domProps||{},s.domProps.id=r.id),e(r.tag,s,a)}})}},49603:function(t,e,r){"use strict";r.d(e,{Z:function(){return n}});var s=r(20144),a=r(29592),i=a.Z,n=s.ZP.extend().extend({name:"loadable",props:{loading:{type:[Boolean,String],default:!1},loaderHeight:{type:[Number,String],default:2}},methods:{genProgress(){return!1===this.loading?null:this.$slots.progress||this.$createElement(i,{props:{absolute:!0,color:!0===this.loading||""===this.loading?this.color||"primary":this.loading,height:this.loaderHeight,indeterminate:!0}})}}})},8718:function(t,e,r){"use strict";r.d(e,{s:function(){return i},x:function(){return n}});var s=r(79582),a=r(69256),i=function(){var t=this,e=t._self._c;t._self._setupProxy;return e(a.Z,{attrs:{fluid:""}},[e(s.Z,[e(a.Z,{attrs:{fluid:""}},[t._v(" I wanted to have a nice looking Radio Player that is working together with an "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/ESP32",target:"_blank"}},[t._v("ESP32 Micro Controller")]),t._v("."),e("p"),t._v(" Here is the result: The GUI was written with Vue.js and I am using "),e("a",{attrs:{href:"https://github.com/segler-alex/radiobrowser-api-rust",target:"_blank"}},[t._v("radiobrowser-api-rust")]),t._v(" to find the Radio Stations - so many thanks to Alex Segler for providing this project."),e("p"),t._v(" The Micro Controller is managed by a Webservice and can provide two output modes: you can stream the Radios direcly or you can activate Bluetooth and stream the Radios from your GUI device via Bluetooth. "),e("p"),t._v(" Of cause you can also enjoy this player without an ESP32... "),e("p"),e("a",{attrs:{href:"https://pschatzmann.ch",target:"_blank"}},[t._v("Phil Schatzmann")])])],1)],1)},n=[]}}]);
//# sourceMappingURL=540.edb03f7e.js.map