{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\"v-container\", {\n    attrs: {\n      fluid: \"\"\n    }\n  }, [_c(\"v-card\", [_c(\"v-container\", {\n    attrs: {\n      fluid: \"\"\n    }\n  }, [_vm._v(\" I wanted to have a nice looking Radio Player that is working together with an \"), _c(\"a\", {\n    attrs: {\n      href: \"https://en.wikipedia.org/wiki/ESP32\",\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"ESP32 Micro Controller\")]), _vm._v(\".\"), _c(\"p\"), _vm._v(\" Here is the result: The GUI was written with Vue.js and I am using \"), _c(\"a\", {\n    attrs: {\n      href: \"https://github.com/segler-alex/radiobrowser-api-rust\",\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"radiobrowser-api-rust\")]), _vm._v(\" to find the Radio Stations - so many thanks to Alex Segler for providing this project.\"), _c(\"p\"), _vm._v(\" The Micro Controller is managed by a Webservice and can provide two output modes: you can stream the Radios direcly or you can activate Bluetooth and stream the Radios from your GUI device via Bluetooth. \"), _c(\"p\"), _vm._v(\" Of cause you can also enjoy this player without an ESP32... \"), _c(\"p\"), _c(\"a\", {\n    attrs: {\n      href: \"https://pschatzmann.ch\",\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"Phil Schatzmann\")])])], 1)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","_setup","_setupProxy","attrs","fluid","_v","href","target","staticRenderFns","_withStripped"],"sources":["C:/Users/ast08/Documents/Arduino/esp32_radio-master/vue-radio/src/views/About.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy\n  return _c(\n    \"v-container\",\n    { attrs: { fluid: \"\" } },\n    [\n      _c(\n        \"v-card\",\n        [\n          _c(\"v-container\", { attrs: { fluid: \"\" } }, [\n            _vm._v(\n              \" I wanted to have a nice looking Radio Player that is working together with an \"\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://en.wikipedia.org/wiki/ESP32\",\n                  target: \"_blank\",\n                },\n              },\n              [_vm._v(\"ESP32 Micro Controller\")]\n            ),\n            _vm._v(\".\"),\n            _c(\"p\"),\n            _vm._v(\n              \" Here is the result: The GUI was written with Vue.js and I am using \"\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://github.com/segler-alex/radiobrowser-api-rust\",\n                  target: \"_blank\",\n                },\n              },\n              [_vm._v(\"radiobrowser-api-rust\")]\n            ),\n            _vm._v(\n              \" to find the Radio Stations - so many thanks to Alex Segler for providing this project.\"\n            ),\n            _c(\"p\"),\n            _vm._v(\n              \" The Micro Controller is managed by a Webservice and can provide two output modes: you can stream the Radios direcly or you can activate Bluetooth and stream the Radios from your GUI device via Bluetooth. \"\n            ),\n            _c(\"p\"),\n            _vm._v(\n              \" Of cause you can also enjoy this player without an ESP32... \"\n            ),\n            _c(\"p\"),\n            _c(\n              \"a\",\n              { attrs: { href: \"https://pschatzmann.ch\", target: \"_blank\" } },\n              [_vm._v(\"Phil Schatzmann\")]\n            ),\n          ]),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAM,GAAG;EAC7B,IAAIC,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;IACjBE,MAAM,GAAGH,GAAG,CAACE,KAAK,CAACE,WAAW;EAChC,OAAOH,EAAE,CACP,aAAa,EACb;IAAEI,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAG;EAAE,CAAC,EACxB,CACEL,EAAE,CACA,QAAQ,EACR,CACEA,EAAE,CAAC,aAAa,EAAE;IAAEI,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAG;EAAE,CAAC,EAAE,CAC1CN,GAAG,CAACO,EAAE,CACJ,iFAAiF,CAClF,EACDN,EAAE,CACA,GAAG,EACH;IACEI,KAAK,EAAE;MACLG,IAAI,EAAE,qCAAqC;MAC3CC,MAAM,EAAE;IACV;EACF,CAAC,EACD,CAACT,GAAG,CAACO,EAAE,CAAC,wBAAwB,CAAC,CAAC,CACnC,EACDP,GAAG,CAACO,EAAE,CAAC,GAAG,CAAC,EACXN,EAAE,CAAC,GAAG,CAAC,EACPD,GAAG,CAACO,EAAE,CACJ,sEAAsE,CACvE,EACDN,EAAE,CACA,GAAG,EACH;IACEI,KAAK,EAAE;MACLG,IAAI,EAAE,sDAAsD;MAC5DC,MAAM,EAAE;IACV;EACF,CAAC,EACD,CAACT,GAAG,CAACO,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAClC,EACDP,GAAG,CAACO,EAAE,CACJ,yFAAyF,CAC1F,EACDN,EAAE,CAAC,GAAG,CAAC,EACPD,GAAG,CAACO,EAAE,CACJ,+MAA+M,CAChN,EACDN,EAAE,CAAC,GAAG,CAAC,EACPD,GAAG,CAACO,EAAE,CACJ,+DAA+D,CAChE,EACDN,EAAE,CAAC,GAAG,CAAC,EACPA,EAAE,CACA,GAAG,EACH;IAAEI,KAAK,EAAE;MAAEG,IAAI,EAAE,wBAAwB;MAAEC,MAAM,EAAE;IAAS;EAAE,CAAC,EAC/D,CAACT,GAAG,CAACO,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAC5B,CACF,CAAC,CACH,EACD,CAAC,CACF,CACF,EACD,CAAC,CACF;AACH,CAAC;AACD,IAAIG,eAAe,GAAG,EAAE;AACxBX,MAAM,CAACY,aAAa,GAAG,IAAI;AAE3B,SAASZ,MAAM,EAAEW,eAAe"},"metadata":{},"sourceType":"module"}