{"ast":null,"code":"/**\n * Music player API implementation which uses the Browsers own Audio object\n * \n    Copyright 2020 Phil Schatzmann\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport WebService from \"@/services/WebService\";\nimport store from '@/store/index';\nexport default class MusicPlayer {\n  constructor() {\n    if (MusicPlayer.isPlaying === undefined) {\n      MusicPlayer.audio = null;\n      MusicPlayer.isPlaying = false;\n      this.service = new WebService();\n    }\n  }\n  getName() {\n    return \"Playing locally\";\n  }\n  async play(url) {\n    await this.stop();\n    try {\n      var result = await this.setup();\n      if (result) {\n        MusicPlayer.audio = new Audio(url);\n        await MusicPlayer.audio.play();\n        MusicPlayer.isPlaying = true;\n        console.info(\"MusicPlayer -> OK\");\n        return {\n          url: url,\n          playing: true\n        };\n      } else {\n        return {\n          url: url,\n          playing: false\n        };\n      }\n    } catch (error) {\n      console.error(error);\n      return {\n        url: url,\n        playing: false\n      };\n    }\n  }\n  async setup() {\n    if (store.state.esp32) {\n      // make sure that bleutooth is active on esp32\n      var response = await this.service.postBluetooth(true);\n      return response.data.bluetooth;\n    } else {\n      return true;\n    }\n  }\n  async stop() {\n    if (MusicPlayer.audio != null) {\n      try {\n        MusicPlayer.audio.pause();\n      } catch (ex) {\n        console.log.error(ex);\n      }\n      MusicPlayer.audio = null;\n    }\n    MusicPlayer.isPlaying = false;\n  }\n  async getInfo() {\n    return {\n      'isPlaying': MusicPlayer.isPlaying\n    };\n  }\n  isPlaying() {\n    return MusicPlayer.isPlaying;\n  }\n}","map":{"version":3,"names":["WebService","store","MusicPlayer","constructor","isPlaying","undefined","audio","service","getName","play","url","stop","result","setup","Audio","console","info","playing","error","state","esp32","response","postBluetooth","data","bluetooth","pause","ex","log","getInfo"],"sources":["C:/Users/ast08/Documents/Arduino/esp32_radio-master/vue-radio/src/services/MusicPlayerWebAudio.js"],"sourcesContent":["\n/**\n * Music player API implementation which uses the Browsers own Audio object\n * \n    Copyright 2020 Phil Schatzmann\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport WebService from \"@/services/WebService\"\nimport store from '@/store/index';\n\nexport default class MusicPlayer {\n    constructor(){\n        if (MusicPlayer.isPlaying ===undefined){\n            MusicPlayer.audio = null;\n            MusicPlayer.isPlaying = false\n            this.service = new WebService()\n        }\n    }\n\n    getName() {\n        return \"Playing locally\"\n    }\n\n    async play(url){\n        await this.stop();\n        try {\n            var result = await this.setup();\n            if (result){\n                MusicPlayer.audio = new Audio(url);\n                await MusicPlayer.audio.play();\n                MusicPlayer.isPlaying = true\n                console.info(\"MusicPlayer -> OK\")\n                return  {url : url, playing:true }  \n            } else {\n                return  {url : url, playing:false }  \n            }\n        } catch(error){\n            console.error(error)\n            return  {url : url, playing:false } \n        }\n    }\n\n    async setup() {\n        if (store.state.esp32){\n            // make sure that bleutooth is active on esp32\n            var response = await this.service.postBluetooth(true);\n            return response.data.bluetooth \n        } else {\n            return true;\n        }\n    }\n\n    async stop() {\n        if (MusicPlayer.audio!=null) {\n            try {\n                MusicPlayer.audio.pause();\n            } catch(ex){\n                console.log.error(ex)\n            }\n            MusicPlayer.audio = null;\n        }\n        MusicPlayer.isPlaying = false\n    }\n\n    async getInfo() {\n        return {'isPlaying': MusicPlayer.isPlaying};\n    }\n\n    isPlaying(){\n        return MusicPlayer.isPlaying;\n    }\n\n\n}\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,KAAK,MAAM,eAAe;AAEjC,eAAe,MAAMC,WAAW,CAAC;EAC7BC,WAAW,GAAE;IACT,IAAID,WAAW,CAACE,SAAS,KAAIC,SAAS,EAAC;MACnCH,WAAW,CAACI,KAAK,GAAG,IAAI;MACxBJ,WAAW,CAACE,SAAS,GAAG,KAAK;MAC7B,IAAI,CAACG,OAAO,GAAG,IAAIP,UAAU,EAAE;IACnC;EACJ;EAEAQ,OAAO,GAAG;IACN,OAAO,iBAAiB;EAC5B;EAEA,MAAMC,IAAI,CAACC,GAAG,EAAC;IACX,MAAM,IAAI,CAACC,IAAI,EAAE;IACjB,IAAI;MACA,IAAIC,MAAM,GAAG,MAAM,IAAI,CAACC,KAAK,EAAE;MAC/B,IAAID,MAAM,EAAC;QACPV,WAAW,CAACI,KAAK,GAAG,IAAIQ,KAAK,CAACJ,GAAG,CAAC;QAClC,MAAMR,WAAW,CAACI,KAAK,CAACG,IAAI,EAAE;QAC9BP,WAAW,CAACE,SAAS,GAAG,IAAI;QAC5BW,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;QACjC,OAAQ;UAACN,GAAG,EAAGA,GAAG;UAAEO,OAAO,EAAC;QAAK,CAAC;MACtC,CAAC,MAAM;QACH,OAAQ;UAACP,GAAG,EAAGA,GAAG;UAAEO,OAAO,EAAC;QAAM,CAAC;MACvC;IACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;MACVH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpB,OAAQ;QAACR,GAAG,EAAGA,GAAG;QAAEO,OAAO,EAAC;MAAM,CAAC;IACvC;EACJ;EAEA,MAAMJ,KAAK,GAAG;IACV,IAAIZ,KAAK,CAACkB,KAAK,CAACC,KAAK,EAAC;MAClB;MACA,IAAIC,QAAQ,GAAG,MAAM,IAAI,CAACd,OAAO,CAACe,aAAa,CAAC,IAAI,CAAC;MACrD,OAAOD,QAAQ,CAACE,IAAI,CAACC,SAAS;IAClC,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ;EAEA,MAAMb,IAAI,GAAG;IACT,IAAIT,WAAW,CAACI,KAAK,IAAE,IAAI,EAAE;MACzB,IAAI;QACAJ,WAAW,CAACI,KAAK,CAACmB,KAAK,EAAE;MAC7B,CAAC,CAAC,OAAMC,EAAE,EAAC;QACPX,OAAO,CAACY,GAAG,CAACT,KAAK,CAACQ,EAAE,CAAC;MACzB;MACAxB,WAAW,CAACI,KAAK,GAAG,IAAI;IAC5B;IACAJ,WAAW,CAACE,SAAS,GAAG,KAAK;EACjC;EAEA,MAAMwB,OAAO,GAAG;IACZ,OAAO;MAAC,WAAW,EAAE1B,WAAW,CAACE;IAAS,CAAC;EAC/C;EAEAA,SAAS,GAAE;IACP,OAAOF,WAAW,CAACE,SAAS;EAChC;AAGJ"},"metadata":{},"sourceType":"module"}