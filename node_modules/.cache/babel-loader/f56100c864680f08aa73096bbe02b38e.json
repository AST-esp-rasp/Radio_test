{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport WebService from \"@/services/WebService\";\nimport MusicPlayerESP32 from \"@/services/MusicPlayerESP32\";\nimport MusicPlayerWebAudio from \"@/services/MusicPlayerWebAudio\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    loading: true,\n    countries: [],\n    genres: [],\n    homeCountry: null,\n    title: \"Radio Player\",\n    esp32: null,\n    publicPath: process.env.BASE_URL,\n    drawer: null,\n    activeRadio: {\n      id: null,\n      active: false,\n      url: null,\n      error: false,\n      name: ''\n    },\n    radios: {},\n    musicPlayer: null,\n    supportedMusicPlayers: [new MusicPlayerWebAudio(), new MusicPlayerESP32()],\n    blacklist: [],\n    resourceAddress: \"https://pschatzmann.github.io\"\n  },\n  mutations: {\n    setDrawer(state, drawer) {\n      state.drawer = drawer;\n    },\n    setCountries(state, countries) {\n      state.countries = countries;\n    },\n    setGenres(state, genres) {\n      state.genres = genres;\n    },\n    setHome(state, homeCountry) {\n      state.homeCountry = homeCountry;\n    },\n    setActiveRadio(state, activeRadio) {\n      state.activeRadio = activeRadio;\n    },\n    setRadios(state, upd) {\n      state.radios[upd.id] = upd.value;\n    },\n    setESP32(state, isEsp) {\n      if (isEsp) {\n        state.title = 'ESP32 Radio Player';\n        state.esp32 = true;\n        // we avoid to load the resources from the ESP32\n        state.publicPath = state.resourceAddress + process.env.BASE_URL;\n      } else {\n        state.esp32 = false;\n      }\n    },\n    setMusicPlayer(state, idx) {\n      if (state.musicPlayer) {\n        state.musicPlayer.stop();\n      }\n      state.musicPlayer = state.supportedMusicPlayers[idx];\n    },\n    setBlacklist(state, blacklist) {\n      state.blacklist = blacklist;\n    },\n    setLoading(state, loading) {\n      state.loading = loading;\n    }\n  },\n  actions: {\n    setupGenres(context) {\n      if (context.state.genres.length == 0) {\n        context.commit('setLoading', true);\n        const publicPath = context.state.publicPath;\n        const ws = new WebService();\n        ws.getGenres(publicPath).then(result => {\n          result.data.forEach(c => {\n            c.imageUrl = publicPath + c.imageUrl;\n          });\n          context.commit('setGenres', result.data);\n          context.commit('setLoading', false);\n        }, error => {\n          console.error(error);\n          context.commit('setLoading', false);\n        });\n      }\n    },\n    setupCountries(context) {\n      if (context.state.countries.length == 0) {\n        context.commit('setLoading', true);\n        const ws = new WebService();\n        const publicPath = context.state.publicPath;\n        ws.getCountry(publicPath).then(result => {\n          var countryNames = {};\n          for (var rec of result.data) {\n            countryNames[rec['alpha-2'].toLowerCase()] = rec.name;\n          }\n          ws.getCountryCodes().then(result1 => {\n            var countryData = result1.data;\n            for (var c of countryData) {\n              c.iconUrl = publicPath + \"flags/\" + c.name.toLowerCase() + \".png\";\n              c.countryCode = c.name;\n              c.counrtyName = countryNames[c.name.toLowerCase()];\n            }\n            context.commit('setCountries', countryData);\n            context.commit('setLoading', false);\n          }).catch(error => {\n            console.error(error);\n            context.commit('setLoading', false);\n          });\n        }).catch(error => {\n          console.error(error);\n          context.commit('setLoading', false);\n        });\n      }\n    },\n    setupHomeCountry(context) {\n      if (context.state.homeCountry == null) {\n        const ws = new WebService();\n        ws.getUserCountry().then(result => {\n          var home = {};\n          const publicPath = context.state.publicPath;\n          const countryCode = result.data.country_code.toLowerCase();\n          home.homeCountryName = result.data.country_name;\n          home.homeCountryPath = '/home/' + countryCode;\n          home.iconUrl = publicPath + \"flags/\" + countryCode + \".png\";\n          context.commit('setHome', home);\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    setupTitle(context) {\n      const ws = new WebService();\n      ws.getInfo().then(result => {\n        context.commit('setESP32', true);\n        console.log(result);\n      }, error => {\n        context.commit('setESP32', false);\n        console.log(error);\n      });\n    },\n    setupBlacklist(context) {\n      const publicPath = context.state.publicPath;\n      const ws = new WebService();\n      ws.getBlacklist(publicPath).then(result => {\n        context.commit('setBlacklist', result.data);\n      }, error => {\n        console.error(error);\n      });\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","WebService","MusicPlayerESP32","MusicPlayerWebAudio","use","Store","state","loading","countries","genres","homeCountry","title","esp32","publicPath","process","env","BASE_URL","drawer","activeRadio","id","active","url","error","name","radios","musicPlayer","supportedMusicPlayers","blacklist","resourceAddress","mutations","setDrawer","setCountries","setGenres","setHome","setActiveRadio","setRadios","upd","value","setESP32","isEsp","setMusicPlayer","idx","stop","setBlacklist","setLoading","actions","setupGenres","context","length","commit","ws","getGenres","then","result","data","forEach","c","imageUrl","console","setupCountries","getCountry","countryNames","rec","toLowerCase","getCountryCodes","result1","countryData","iconUrl","countryCode","counrtyName","catch","setupHomeCountry","getUserCountry","home","country_code","homeCountryName","country_name","homeCountryPath","setupTitle","getInfo","log","setupBlacklist","getBlacklist","modules"],"sources":["C:/Users/ast08/Documents/Arduino/esp32_radio-master/vue-radio/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport WebService from \"@/services/WebService\"\nimport MusicPlayerESP32 from \"@/services/MusicPlayerESP32\"\nimport MusicPlayerWebAudio from \"@/services/MusicPlayerWebAudio\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    loading: true,\n    countries: [],\n    genres: [],\n    homeCountry: null,\n    title: \"Radio Player\",\n    esp32: null,\n    publicPath: process.env.BASE_URL,\n    drawer: null,\n    activeRadio: {id:null, active:false, url:null, error:false, name:''},\n    radios: {},\n    musicPlayer: null,\n    supportedMusicPlayers: [new MusicPlayerWebAudio(), new MusicPlayerESP32()],\n    blacklist: [],\n    resourceAddress: \"https://pschatzmann.github.io\"\n\n  },\n  mutations: {\n    setDrawer(state, drawer){\n      state.drawer = drawer;\n    },\n\n    setCountries(state, countries) {\n      state.countries = countries;\n    },\n\n    setGenres(state, genres) {\n      state.genres = genres;\n    },\n\n    setHome(state, homeCountry) {\n      state.homeCountry = homeCountry;\n    },\n\n    setActiveRadio(state, activeRadio) {\n      state.activeRadio = activeRadio;\n    },\n\n    setRadios(state, upd) {\n      state.radios[upd.id] = upd.value;\n    },\n\n    setESP32(state, isEsp) {\n      if (isEsp){\n        state.title = 'ESP32 Radio Player';\n        state.esp32 = true;\n        // we avoid to load the resources from the ESP32\n        state.publicPath = state.resourceAddress + process.env.BASE_URL\n      } else {\n        state.esp32 = false;\n      }\n    },\n\n    setMusicPlayer(state, idx) {\n      if (state.musicPlayer) {\n        state.musicPlayer.stop()\n      }\n      state.musicPlayer = state.supportedMusicPlayers[idx];\n    },\n\n    setBlacklist(state,blacklist) {\n      state.blacklist = blacklist;\n    },\n\n    setLoading(state,loading) {\n      state.loading = loading;\n    },\n\n  },\n  actions: {\n\n    setupGenres(context){\n      if (context.state.genres.length==0) {\n        context.commit('setLoading', true);\n\n        const publicPath = context.state.publicPath;        \n        const ws = new WebService()\n        ws.getGenres(publicPath).then(result => {\n            result.data.forEach(c => {c.imageUrl = publicPath+c.imageUrl;});\n            context.commit('setGenres', result.data);\n            context.commit('setLoading', false);\n          }, error => {\n            console.error(error);\n            context.commit('setLoading', false);\n          });\n      }\n    },\n\n    setupCountries(context){  \n        if (context.state.countries.length==0){\n          context.commit('setLoading', true);\n\n          const ws = new WebService()\n          const publicPath = context.state.publicPath;\n          ws.getCountry(publicPath).then(result => {\n              var countryNames = {}\n              for (var rec of result.data){\n                  countryNames[rec['alpha-2'].toLowerCase()] = rec.name;\n              }\n              ws.getCountryCodes().then(result1 => {\n                var countryData = result1.data\n                for (var c of countryData ){\n                    c.iconUrl = publicPath+\"flags/\"+c.name.toLowerCase()+\".png\"\n                    c.countryCode = c.name\n                    c.counrtyName = countryNames[c.name.toLowerCase()]\n                }\n                context.commit('setCountries', countryData);\n                context.commit('setLoading', false);\n\n              }).catch(error => {\n                console.error(error)\n                context.commit('setLoading', false);\n              })        \n          }).catch(error => {\n              console.error(error)\n              context.commit('setLoading', false);\n            })\n        }\n    },\n\n    setupHomeCountry(context){\n      if (context.state.homeCountry == null){\n        const ws = new WebService()\n        ws.getUserCountry().then(result => {\n            var home = {}\n            const publicPath = context.state.publicPath;\n            const countryCode = result.data.country_code.toLowerCase()\n            home.homeCountryName = result.data.country_name\n            home.homeCountryPath = '/home/'+countryCode\n            home.iconUrl = publicPath+\"flags/\"+countryCode+\".png\"\n\n            context.commit('setHome', home);\n\n          }).catch(error => {\n            console.error(error)\n        })\n      }\n    },\n\n    setupTitle(context){\n      const ws = new WebService()\n      ws.getInfo().then(result => {\n        context.commit('setESP32', true);\n        console.log(result)\n      }, error => {\n        context.commit('setESP32', false);\n        console.log(error)\n      });\n    },\n\n    setupBlacklist(context){\n      const publicPath = context.state.publicPath;\n      const ws = new WebService()\n      ws.getBlacklist(publicPath).then(result => {\n          context.commit('setBlacklist', result.data);\n      }, error => {\n          console.error(error);\n      });\n    },\n\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,mBAAmB,MAAM,gCAAgC;AAEhEJ,GAAG,CAACK,GAAG,CAACJ,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACK,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,OAAO,EAAE,IAAI;IACbC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;IAChCC,MAAM,EAAE,IAAI;IACZC,WAAW,EAAE;MAACC,EAAE,EAAC,IAAI;MAAEC,MAAM,EAAC,KAAK;MAAEC,GAAG,EAAC,IAAI;MAAEC,KAAK,EAAC,KAAK;MAAEC,IAAI,EAAC;IAAE,CAAC;IACpEC,MAAM,EAAE,CAAC,CAAC;IACVC,WAAW,EAAE,IAAI;IACjBC,qBAAqB,EAAE,CAAC,IAAIvB,mBAAmB,EAAE,EAAE,IAAID,gBAAgB,EAAE,CAAC;IAC1EyB,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE;EAEnB,CAAC;EACDC,SAAS,EAAE;IACTC,SAAS,CAACxB,KAAK,EAAEW,MAAM,EAAC;MACtBX,KAAK,CAACW,MAAM,GAAGA,MAAM;IACvB,CAAC;IAEDc,YAAY,CAACzB,KAAK,EAAEE,SAAS,EAAE;MAC7BF,KAAK,CAACE,SAAS,GAAGA,SAAS;IAC7B,CAAC;IAEDwB,SAAS,CAAC1B,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACG,MAAM,GAAGA,MAAM;IACvB,CAAC;IAEDwB,OAAO,CAAC3B,KAAK,EAAEI,WAAW,EAAE;MAC1BJ,KAAK,CAACI,WAAW,GAAGA,WAAW;IACjC,CAAC;IAEDwB,cAAc,CAAC5B,KAAK,EAAEY,WAAW,EAAE;MACjCZ,KAAK,CAACY,WAAW,GAAGA,WAAW;IACjC,CAAC;IAEDiB,SAAS,CAAC7B,KAAK,EAAE8B,GAAG,EAAE;MACpB9B,KAAK,CAACkB,MAAM,CAACY,GAAG,CAACjB,EAAE,CAAC,GAAGiB,GAAG,CAACC,KAAK;IAClC,CAAC;IAEDC,QAAQ,CAAChC,KAAK,EAAEiC,KAAK,EAAE;MACrB,IAAIA,KAAK,EAAC;QACRjC,KAAK,CAACK,KAAK,GAAG,oBAAoB;QAClCL,KAAK,CAACM,KAAK,GAAG,IAAI;QAClB;QACAN,KAAK,CAACO,UAAU,GAAGP,KAAK,CAACsB,eAAe,GAAGd,OAAO,CAACC,GAAG,CAACC,QAAQ;MACjE,CAAC,MAAM;QACLV,KAAK,CAACM,KAAK,GAAG,KAAK;MACrB;IACF,CAAC;IAED4B,cAAc,CAAClC,KAAK,EAAEmC,GAAG,EAAE;MACzB,IAAInC,KAAK,CAACmB,WAAW,EAAE;QACrBnB,KAAK,CAACmB,WAAW,CAACiB,IAAI,EAAE;MAC1B;MACApC,KAAK,CAACmB,WAAW,GAAGnB,KAAK,CAACoB,qBAAqB,CAACe,GAAG,CAAC;IACtD,CAAC;IAEDE,YAAY,CAACrC,KAAK,EAACqB,SAAS,EAAE;MAC5BrB,KAAK,CAACqB,SAAS,GAAGA,SAAS;IAC7B,CAAC;IAEDiB,UAAU,CAACtC,KAAK,EAACC,OAAO,EAAE;MACxBD,KAAK,CAACC,OAAO,GAAGA,OAAO;IACzB;EAEF,CAAC;EACDsC,OAAO,EAAE;IAEPC,WAAW,CAACC,OAAO,EAAC;MAClB,IAAIA,OAAO,CAACzC,KAAK,CAACG,MAAM,CAACuC,MAAM,IAAE,CAAC,EAAE;QAClCD,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;QAElC,MAAMpC,UAAU,GAAGkC,OAAO,CAACzC,KAAK,CAACO,UAAU;QAC3C,MAAMqC,EAAE,GAAG,IAAIjD,UAAU,EAAE;QAC3BiD,EAAE,CAACC,SAAS,CAACtC,UAAU,CAAC,CAACuC,IAAI,CAACC,MAAM,IAAI;UACpCA,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,CAAC,IAAI;YAACA,CAAC,CAACC,QAAQ,GAAG5C,UAAU,GAAC2C,CAAC,CAACC,QAAQ;UAAC,CAAC,CAAC;UAC/DV,OAAO,CAACE,MAAM,CAAC,WAAW,EAAEI,MAAM,CAACC,IAAI,CAAC;UACxCP,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;QACrC,CAAC,EAAE3B,KAAK,IAAI;UACVoC,OAAO,CAACpC,KAAK,CAACA,KAAK,CAAC;UACpByB,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;QACrC,CAAC,CAAC;MACN;IACF,CAAC;IAEDU,cAAc,CAACZ,OAAO,EAAC;MACnB,IAAIA,OAAO,CAACzC,KAAK,CAACE,SAAS,CAACwC,MAAM,IAAE,CAAC,EAAC;QACpCD,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;QAElC,MAAMC,EAAE,GAAG,IAAIjD,UAAU,EAAE;QAC3B,MAAMY,UAAU,GAAGkC,OAAO,CAACzC,KAAK,CAACO,UAAU;QAC3CqC,EAAE,CAACU,UAAU,CAAC/C,UAAU,CAAC,CAACuC,IAAI,CAACC,MAAM,IAAI;UACrC,IAAIQ,YAAY,GAAG,CAAC,CAAC;UACrB,KAAK,IAAIC,GAAG,IAAIT,MAAM,CAACC,IAAI,EAAC;YACxBO,YAAY,CAACC,GAAG,CAAC,SAAS,CAAC,CAACC,WAAW,EAAE,CAAC,GAAGD,GAAG,CAACvC,IAAI;UACzD;UACA2B,EAAE,CAACc,eAAe,EAAE,CAACZ,IAAI,CAACa,OAAO,IAAI;YACnC,IAAIC,WAAW,GAAGD,OAAO,CAACX,IAAI;YAC9B,KAAK,IAAIE,CAAC,IAAIU,WAAW,EAAE;cACvBV,CAAC,CAACW,OAAO,GAAGtD,UAAU,GAAC,QAAQ,GAAC2C,CAAC,CAACjC,IAAI,CAACwC,WAAW,EAAE,GAAC,MAAM;cAC3DP,CAAC,CAACY,WAAW,GAAGZ,CAAC,CAACjC,IAAI;cACtBiC,CAAC,CAACa,WAAW,GAAGR,YAAY,CAACL,CAAC,CAACjC,IAAI,CAACwC,WAAW,EAAE,CAAC;YACtD;YACAhB,OAAO,CAACE,MAAM,CAAC,cAAc,EAAEiB,WAAW,CAAC;YAC3CnB,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;UAErC,CAAC,CAAC,CAACqB,KAAK,CAAChD,KAAK,IAAI;YAChBoC,OAAO,CAACpC,KAAK,CAACA,KAAK,CAAC;YACpByB,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;UACrC,CAAC,CAAC;QACN,CAAC,CAAC,CAACqB,KAAK,CAAChD,KAAK,IAAI;UACdoC,OAAO,CAACpC,KAAK,CAACA,KAAK,CAAC;UACpByB,OAAO,CAACE,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;QACrC,CAAC,CAAC;MACN;IACJ,CAAC;IAEDsB,gBAAgB,CAACxB,OAAO,EAAC;MACvB,IAAIA,OAAO,CAACzC,KAAK,CAACI,WAAW,IAAI,IAAI,EAAC;QACpC,MAAMwC,EAAE,GAAG,IAAIjD,UAAU,EAAE;QAC3BiD,EAAE,CAACsB,cAAc,EAAE,CAACpB,IAAI,CAACC,MAAM,IAAI;UAC/B,IAAIoB,IAAI,GAAG,CAAC,CAAC;UACb,MAAM5D,UAAU,GAAGkC,OAAO,CAACzC,KAAK,CAACO,UAAU;UAC3C,MAAMuD,WAAW,GAAGf,MAAM,CAACC,IAAI,CAACoB,YAAY,CAACX,WAAW,EAAE;UAC1DU,IAAI,CAACE,eAAe,GAAGtB,MAAM,CAACC,IAAI,CAACsB,YAAY;UAC/CH,IAAI,CAACI,eAAe,GAAG,QAAQ,GAACT,WAAW;UAC3CK,IAAI,CAACN,OAAO,GAAGtD,UAAU,GAAC,QAAQ,GAACuD,WAAW,GAAC,MAAM;UAErDrB,OAAO,CAACE,MAAM,CAAC,SAAS,EAAEwB,IAAI,CAAC;QAEjC,CAAC,CAAC,CAACH,KAAK,CAAChD,KAAK,IAAI;UAChBoC,OAAO,CAACpC,KAAK,CAACA,KAAK,CAAC;QACxB,CAAC,CAAC;MACJ;IACF,CAAC;IAEDwD,UAAU,CAAC/B,OAAO,EAAC;MACjB,MAAMG,EAAE,GAAG,IAAIjD,UAAU,EAAE;MAC3BiD,EAAE,CAAC6B,OAAO,EAAE,CAAC3B,IAAI,CAACC,MAAM,IAAI;QAC1BN,OAAO,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;QAChCS,OAAO,CAACsB,GAAG,CAAC3B,MAAM,CAAC;MACrB,CAAC,EAAE/B,KAAK,IAAI;QACVyB,OAAO,CAACE,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC;QACjCS,OAAO,CAACsB,GAAG,CAAC1D,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IAED2D,cAAc,CAAClC,OAAO,EAAC;MACrB,MAAMlC,UAAU,GAAGkC,OAAO,CAACzC,KAAK,CAACO,UAAU;MAC3C,MAAMqC,EAAE,GAAG,IAAIjD,UAAU,EAAE;MAC3BiD,EAAE,CAACgC,YAAY,CAACrE,UAAU,CAAC,CAACuC,IAAI,CAACC,MAAM,IAAI;QACvCN,OAAO,CAACE,MAAM,CAAC,cAAc,EAAEI,MAAM,CAACC,IAAI,CAAC;MAC/C,CAAC,EAAEhC,KAAK,IAAI;QACRoC,OAAO,CAACpC,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACJ;EAEF,CAAC;EACD6D,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}