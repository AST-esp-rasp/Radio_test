{"ast":null,"code":"/**\n * Music player API implementation which controls the ESP32 with the help of Webservice calls\n */\nimport WebService from \"@/services/WebService\";\nexport default class MusicPlayerESP32 {\n  constructor() {\n    MusicPlayerESP32.isPlaying = false;\n    this.service = new WebService();\n  }\n  getName() {\n    return \"Streaming on ESP32\";\n  }\n  async play(url) {\n    MusicPlayerESP32.isPlaying = true;\n    var response = await this.service.postStreaming(MusicPlayerESP32.isPlaying, url);\n    return response.status == 200 ? {\n      url: url,\n      playing: true\n    } : {\n      url: url,\n      playing: false\n    };\n  }\n  async stop() {\n    MusicPlayerESP32.isPlaying = false;\n    return await this.service.postStreaming(MusicPlayerESP32.isPlaying, '');\n  }\n  async getInfo() {\n    return await this.service.getRadioInfo();\n  }\n  isPlaying() {\n    return MusicPlayerESP32.isPlaying;\n  }\n}","map":{"version":3,"names":["WebService","MusicPlayerESP32","constructor","isPlaying","service","getName","play","url","response","postStreaming","status","playing","stop","getInfo","getRadioInfo"],"sources":["C:/Users/ast08/Documents/Arduino/esp32_radio-master/vue-radio/src/services/MusicPlayerESP32.js"],"sourcesContent":["/**\n * Music player API implementation which controls the ESP32 with the help of Webservice calls\n */\nimport WebService from \"@/services/WebService\"\n\nexport default class MusicPlayerESP32 {\n    constructor(){\n        MusicPlayerESP32.isPlaying = false;\n        this.service = new WebService()\n    }\n\n    getName() {\n        return \"Streaming on ESP32\"\n    }\n\n    async play(url){\n        MusicPlayerESP32.isPlaying = true;\n        var response = await this.service.postStreaming(MusicPlayerESP32.isPlaying, url)\n        return response.status == 200 ? {url : url, playing:true} :{url : url, playing:false} \n    }\n\n    async stop() {\n        MusicPlayerESP32.isPlaying = false;\n        return await this.service.postStreaming(MusicPlayerESP32.isPlaying, '')\n    }\n\n    async getInfo() {\n        return await this.service.getRadioInfo();\n    }\n\n    isPlaying(){\n        return MusicPlayerESP32.isPlaying;\n    }\n\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,uBAAuB;AAE9C,eAAe,MAAMC,gBAAgB,CAAC;EAClCC,WAAW,GAAE;IACTD,gBAAgB,CAACE,SAAS,GAAG,KAAK;IAClC,IAAI,CAACC,OAAO,GAAG,IAAIJ,UAAU,EAAE;EACnC;EAEAK,OAAO,GAAG;IACN,OAAO,oBAAoB;EAC/B;EAEA,MAAMC,IAAI,CAACC,GAAG,EAAC;IACXN,gBAAgB,CAACE,SAAS,GAAG,IAAI;IACjC,IAAIK,QAAQ,GAAG,MAAM,IAAI,CAACJ,OAAO,CAACK,aAAa,CAACR,gBAAgB,CAACE,SAAS,EAAEI,GAAG,CAAC;IAChF,OAAOC,QAAQ,CAACE,MAAM,IAAI,GAAG,GAAG;MAACH,GAAG,EAAGA,GAAG;MAAEI,OAAO,EAAC;IAAI,CAAC,GAAE;MAACJ,GAAG,EAAGA,GAAG;MAAEI,OAAO,EAAC;IAAK,CAAC;EACzF;EAEA,MAAMC,IAAI,GAAG;IACTX,gBAAgB,CAACE,SAAS,GAAG,KAAK;IAClC,OAAO,MAAM,IAAI,CAACC,OAAO,CAACK,aAAa,CAACR,gBAAgB,CAACE,SAAS,EAAE,EAAE,CAAC;EAC3E;EAEA,MAAMU,OAAO,GAAG;IACZ,OAAO,MAAM,IAAI,CAACT,OAAO,CAACU,YAAY,EAAE;EAC5C;EAEAX,SAAS,GAAE;IACP,OAAOF,gBAAgB,CAACE,SAAS;EACrC;AAGJ"},"metadata":{},"sourceType":"module"}