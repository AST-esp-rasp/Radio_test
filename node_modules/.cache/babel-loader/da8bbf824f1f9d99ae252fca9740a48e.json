{"ast":null,"code":"/**\n    Copyright 2020 Phil Schatzmann\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport axios from 'axios';\nexport default class WebService {\n  async getGenres(publicPath) {\n    console.log(\"getGenres\");\n    return await axios.get(publicPath + \"data/genres.json\");\n  }\n  async getCountry(publicPath) {\n    return await axios.get(publicPath + \"data/countries.json\");\n  }\n  async getBlacklist(publicPath) {\n    return await axios.get(publicPath + \"data/blacklist.json\");\n  }\n  async getCountryCodes() {\n    return await axios.get(\"https://de1.api.radio-browser.info/json/countrycodes?hidebroken=true\");\n  }\n  async getRadios(field, value) {\n    var url = \"https://de1.api.radio-browser.info/json/stations/search?\" + field + \"=\" + value + \"&codec=MP3\";\n    return await axios.get(url);\n  }\n  async getUserCountry() {\n    return await axios.get(\"https://api.ipdata.co/?api-key=62f04882eac5c1c2469a3dee1d5c98187ba19c0a189783d372e36122\");\n  }\n\n  // We retrieve the info from the ESP32\n  async getInfo() {\n    console.log(\"getInfo\");\n    return await axios.get(\"/service/info\");\n  }\n  async postBluetooth(active) {\n    var action = active ? \"start\" : \"stop\";\n    return await axios.post('/service/bluetooth/' + action);\n  }\n  async postStreaming(active, url) {\n    if (active) {\n      const formData = new FormData();\n      formData.set('url', url);\n      return await axios.post('/service/streaming/start', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } else {\n      return await axios.post('/service/streaming/stop');\n    }\n  }\n  async getRadioInfo() {\n    return await axios.get(\"/service/status\");\n  }\n}","map":{"version":3,"names":["axios","WebService","getGenres","publicPath","console","log","get","getCountry","getBlacklist","getCountryCodes","getRadios","field","value","url","getUserCountry","getInfo","postBluetooth","active","action","post","postStreaming","formData","FormData","set","headers","getRadioInfo"],"sources":["C:/Users/ast08/Documents/Arduino/esp32_radio-master/vue-radio/src/services/WebService.js"],"sourcesContent":["/**\n    Copyright 2020 Phil Schatzmann\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport axios from 'axios'\n\nexport default class WebService {\n\n\n    async getGenres(publicPath) {\n        console.log(\"getGenres\")\n        return await axios.get(publicPath+\"data/genres.json\")\n    }\n\n    async getCountry(publicPath) {\n        return await axios.get( publicPath+\"data/countries.json\")\n    }\n\n    async getBlacklist(publicPath) {\n        return await axios.get( publicPath+\"data/blacklist.json\")\n    }\n\n    async getCountryCodes() {\n        return await axios.get( \"https://de1.api.radio-browser.info/json/countrycodes?hidebroken=true\")\n    }\n    \n    async getRadios(field, value) {\n        var url = \"https://de1.api.radio-browser.info/json/stations/search?\"+field+\"=\"+value+\"&codec=MP3\"\n        return await axios.get(url);\n    }\n\n    async getUserCountry() {\n        return await axios.get(\"https://api.ipdata.co/?api-key=62f04882eac5c1c2469a3dee1d5c98187ba19c0a189783d372e36122\")\n    }\n\n    // We retrieve the info from the ESP32\n    async getInfo() {\n        console.log(\"getInfo\")\n        return await axios.get(\"/service/info\")\n    }\n    \n    async postBluetooth(active) {\n        var action = active ? \"start\" : \"stop\"\n        return await axios.post('/service/bluetooth/'+action)\n    }\n\n    async postStreaming(active, url) {\n        if (active) {\n            const formData = new FormData()\n            formData.set('url', url);\n            return await axios.post('/service/streaming/start', formData, {\n                headers: {'Content-Type': 'multipart/form-data' }\n            })\n        } else {\n            return await axios.post('/service/streaming/stop')            \n        }\n    }\n\n    async getRadioInfo() {\n        return await axios.get(\"/service/status\");\n    }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,MAAMC,UAAU,CAAC;EAG5B,MAAMC,SAAS,CAACC,UAAU,EAAE;IACxBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,OAAO,MAAML,KAAK,CAACM,GAAG,CAACH,UAAU,GAAC,kBAAkB,CAAC;EACzD;EAEA,MAAMI,UAAU,CAACJ,UAAU,EAAE;IACzB,OAAO,MAAMH,KAAK,CAACM,GAAG,CAAEH,UAAU,GAAC,qBAAqB,CAAC;EAC7D;EAEA,MAAMK,YAAY,CAACL,UAAU,EAAE;IAC3B,OAAO,MAAMH,KAAK,CAACM,GAAG,CAAEH,UAAU,GAAC,qBAAqB,CAAC;EAC7D;EAEA,MAAMM,eAAe,GAAG;IACpB,OAAO,MAAMT,KAAK,CAACM,GAAG,CAAE,sEAAsE,CAAC;EACnG;EAEA,MAAMI,SAAS,CAACC,KAAK,EAAEC,KAAK,EAAE;IAC1B,IAAIC,GAAG,GAAG,0DAA0D,GAACF,KAAK,GAAC,GAAG,GAACC,KAAK,GAAC,YAAY;IACjG,OAAO,MAAMZ,KAAK,CAACM,GAAG,CAACO,GAAG,CAAC;EAC/B;EAEA,MAAMC,cAAc,GAAG;IACnB,OAAO,MAAMd,KAAK,CAACM,GAAG,CAAC,yFAAyF,CAAC;EACrH;;EAEA;EACA,MAAMS,OAAO,GAAG;IACZX,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,OAAO,MAAML,KAAK,CAACM,GAAG,CAAC,eAAe,CAAC;EAC3C;EAEA,MAAMU,aAAa,CAACC,MAAM,EAAE;IACxB,IAAIC,MAAM,GAAGD,MAAM,GAAG,OAAO,GAAG,MAAM;IACtC,OAAO,MAAMjB,KAAK,CAACmB,IAAI,CAAC,qBAAqB,GAACD,MAAM,CAAC;EACzD;EAEA,MAAME,aAAa,CAACH,MAAM,EAAEJ,GAAG,EAAE;IAC7B,IAAII,MAAM,EAAE;MACR,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,GAAG,CAAC,KAAK,EAAEV,GAAG,CAAC;MACxB,OAAO,MAAMb,KAAK,CAACmB,IAAI,CAAC,0BAA0B,EAAEE,QAAQ,EAAE;QAC1DG,OAAO,EAAE;UAAC,cAAc,EAAE;QAAsB;MACpD,CAAC,CAAC;IACN,CAAC,MAAM;MACH,OAAO,MAAMxB,KAAK,CAACmB,IAAI,CAAC,yBAAyB,CAAC;IACtD;EACJ;EAEA,MAAMM,YAAY,GAAG;IACjB,OAAO,MAAMzB,KAAK,CAACM,GAAG,CAAC,iBAAiB,CAAC;EAC7C;AAEJ"},"metadata":{},"sourceType":"module"}